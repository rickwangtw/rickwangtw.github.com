<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Java | 狂風日誌]]></title>
  <link href="http://rickwangtw.github.com/blog/categories/java/atom.xml" rel="self"/>
  <link href="http://rickwangtw.github.com/"/>
  <updated>2012-12-04T17:23:36+08:00</updated>
  <id>http://rickwangtw.github.com/</id>
  <author>
    <name><![CDATA[Rick Wang]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Java: ZIP 壓縮檔的註解]]></title>
    <link href="http://rickwangtw.github.com/blog/2012/12/04/the-comment-in-zip/"/>
    <updated>2012-12-04T17:21:00+08:00</updated>
    <id>http://rickwangtw.github.com/blog/2012/12/04/the-comment-in-zip</id>
    <content type="html"><![CDATA[<p>Java 的"java.util.zip"套件可以輕易獲得各個內容物的註解。</p>

<p>然而，整個Zip壓縮檔的註解卻無法透過此API輕易獲得。</p>

<p>要攫取此檔案的註解必須要瞭解Zip檔的架構。</p>

<!-- more -->


<ul>
<li>目錄

<ul>
<li><a href="#solution">解法</a></li>
<li><a href="#reference">參考資料</a></li>
</ul>
</li>
</ul>


<h2 id="solution">解法</h2>


<p>``` java ZipTest.java: extract the zip file comment
import java.io.IOException;
import java.io.RandomAccessFile;</p>

<p>public class ZipTest {</p>

<pre><code>public static void main(String[] args) {
    String file = null;
    /* use the first parameter as the input zip file */
    if (args.length &gt; 0)
        file = args[0];

    RandomAccessFile zipFile = null;
    try {
        zipFile = new RandomAccessFile(file, "r");

        long fileSize = zipFile.length();
        /* find the magic number in a reverse manner */
        for (long i = 1 ; fileSize - i &gt;= 0; ++i) {
            zipFile.seek(fileSize - i);
            byte b = zipFile.readByte();
            if (b == 0x06) {
                zipFile.seek(fileSize - i - 3);
                /* check for magic "0x06054b50" in little endian */
                byte[] key = new byte[4];
                zipFile.readFully(key);
                if (key[0] != 0x50 || key[1] != 0x4b || key[2] != 0x05) {
                    continue;
                }
                /* get the file comment size */
                byte[] tmp = new byte[18];
                zipFile.readFully(tmp);
                int commentSize = (tmp[16] &amp; 0xff) | ((tmp[17] &amp; 0xff) &gt;&gt; 8);
                if (commentSize &gt; 0) {
                    byte[] comment = new byte[commentSize];
                    zipFile.readFully(comment);
                    System.out.println("comment: " + new String(comment));
                }
                break;
            }
        }
    } catch(Exception ex) {
        ex.printStackTrace();
    } finally {
        if (zipFile != null) {
            try {
                zipFile.close();
            } catch (IOException ex) {
            }
        }
    }
}
</code></pre>

<p>}
```</p>

<p>ZIP檔案的註解放在EOCD記錄 (End of Central Directory Record)中。</p>

<p>至於EOCD存放在哪裡，就必須稍微研究一下Zip的檔案格式。</p>

<br>


<p>ZIP 的檔案格式</p>

<pre><code>[local file header 1]
[encryption header 1]
[file data 1]
[data descriptor 1]
.
.
.
[local file header n]
[encryption header n]
[file data n]
[data descriptor n]
[archive decryption header]
[archive extra data record]
[central directory header 1]
.
.
.
[central directory header n]
[zip64 end of central directory record]
[zip64 end of central directory locator]
[end of central directory record]
</code></pre>

<p>接下來我們看EOCD的結構</p>

<pre><code>end of central dir signature    4 bytes  (0x06054b50)
number of this disk             2 bytes
number of the disk with the
start of the central directory  2 bytes
total number of entries in the
central directory on this disk  2 bytes
total number of entries in
the central directory           2 bytes
size of the central directory   4 bytes
offset of start of central
directory with respect to
the starting disk number        4 bytes
.ZIP file comment length        2 bytes
.ZIP file comment               (variable size)
</code></pre>

<p>由以上資料我們可以知道，只要有辦法找到 "end of central dir signature"，我們就有辦法知道Zip註解的長度以及內容。
以上的解法就是從檔案尾端一個byte一個byte讀取，直到找個 "0x0605450" 這個 magic number。</p>

<h2 id="reference">參考資料</h2>


<p><a href="http://www.pkware.com/documents/casestudies/APPNOTE.TXT">PKWARE</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Java: ZIP 壓縮檔的探索]]></title>
    <link href="http://rickwangtw.github.com/blog/2012/12/04/explore-zip-in-java/"/>
    <updated>2012-12-04T14:58:00+08:00</updated>
    <id>http://rickwangtw.github.com/blog/2012/12/04/explore-zip-in-java</id>
    <content type="html"><![CDATA[<p>ZIP 壓縮格式於1989年由Phil Katz設計。</p>

<p>支援的壓縮方式多元，包含未經壓縮的stored，最常用的<a href="http://en.wikipedia.org/wiki/DEFLATE">deflate</a>，
7z使用的<a href="http://en.wikipedia.org/wiki/LZMA">lzma</a>等。</p>

<p>此格式雖然壓縮率沒有RAR或是7-zip來的高，由於Winzip廣泛地被使用以及Windows ME之後系統支援，
現在為個平台主流的壓縮格式。</p>

<!-- more -->


<ul>
<li>目錄

<ul>
<li><a href="#solution">解法</a></li>
<li><a href="#notice">注意事項</a></li>
<li><a href="#reference">參考資料</a></li>
</ul>
</li>
</ul>


<h2 id="solution">解法</h2>


<p>``` java ZipTest.java: list the contents of a zip
import java.io.IOException;
import java.util.Enumeration;
import java.util.zip.ZipEntry;
import java.util.zip.ZipFile;</p>

<p>public class ZipTest {</p>

<pre><code>public void list(String file) {

    try {
        /* the default file is test.zip */
        if (file == null) {
            file = "test.zip";
        }
        ZipFile zipFile = new ZipFile(file);
        Enumeration zipEntries = zipFile.entries();

        while (zipEntries.hasMoreElements())
            System.out.println(((ZipEntry)zipEntries.nextElement()).getName());

    } catch (IOException ex) {
        ex.printStackTrace();
    }
}

public static void main(String[] args) {
    String file = null;
    /* use the first parameter as the input zip file */
    if (args.length &gt; 0)
        file = args[0];
    new ZipTest().list(file);
}
</code></pre>

<p>}
```
ZipFile 類別是用來讀取每個壓縮項目的(ZipEntry)，而透過entries()這個方法可以獲得所有項目的列舉(enumeration)。</p>

<p>透過ZipEntry的列舉，我們可以利用ZipEntry的getName()方法來列出Zip壓縮檔裡面的內容物。</p>

<br>




<h2 id="notice">注意事項</h2>


<p>以下使用的java.util.zip 套件只適用於deflate的壓縮格式。</p>

<br>


<h2 id="reference">參考資料</h2>


<p><a href="http://en.wikipedia.org/wiki/Zip_(file_format)">Wikipedia</a></p>

<p><a href="http://www.javadb.com/how-to-list-the-contents-of-a-zip-file">Javadb.com</a></p>

<p><a href="http://docs.oracle.com/javase/1.4.2/docs/api/java/util/zip/package-summary.html">docs.oracle.com</a></p>
]]></content>
  </entry>
  
</feed>
